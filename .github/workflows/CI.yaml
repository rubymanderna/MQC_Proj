name: CI tests MCQ_Proj

on:
  # GitHub has started calling new repo's first branch "main" https://github.com/github/renaming
  # The cookiecutter uses the "--initial-branch" flag when it runs git-init
  push:
    branches:
      - "*"
  pull_request:
    branches:
      - "main"
  schedule:
    # Weekly tests run on main by default:
    #   Scheduled workflows run on the latest commit on the default or base branch.
    #   (from https://help.github.com/en/actions/reference/events-that-trigger-workflows#scheduled-events-schedule)
    - cron: "0 0 * * 0"

jobs:
  test:
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest]
        python-version: ["3.8", "3.9", "3.10", "3.11"]
        include:
          - os: macos-latest
            platform: osx-64
          - os: ubuntu-latest
            platform: linux-64

    name: 🐍 ${{ matrix.python-version }} • ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    
    env:
      PLATFORM: ${{ matrix.platform }}
      PYVER: ${{ matrix.python-version }}

    defaults:
      run:
        shell: bash -l {0}

    steps:
      - uses: actions/checkout@v4

      - name: Additional info about the build
        run: |
          uname -a
          df -h
          ulimit -a

      - name: Remove .DS_Store files (if any)
        run: |
          find . -name '.DS_Store' -delete

      - name: Set up Micromamba
        uses: mamba-org/setup-micromamba@v1
        with:
          environment-file: devtools/conda-envs/test_env.yaml
          environment-name: test
          create-args: >-
            python=${{ matrix.python-version }}
          condarc: |
            channels:
              - conda-forge

      - name: Install dependencies
        run: |
          micromamba install -y -q -c conda-forge constructor jinja2 curl libarchive
          micromamba list

      - name: Prepare CI.yaml
        run: |
          cd installers/
          sed -i.bak 's/{% set python = "3.8" %}/{% set python = "${{ env.PYVER }}" %}/g' CI.yaml
          sed -i.bak 's/{% set platform = "xxx" %}/{% set platform = "${{ matrix.platform }}" %}/g' CI.yaml

      - name: Build Installer
        run: |
          cd installers/
          MICROMAMBA_VERSION=1.3.1
          MICROMAMBA_BUILD=0
          curl -L -O "https://anaconda.org/conda-forge/micromamba/${MICROMAMBA_VERSION}/download/${{ matrix.platform }}/micromamba-${MICROMAMBA_VERSION}-${MICROMAMBA_BUILD}.tar.bz2"
          bsdtar -xf "micromamba-${MICROMAMBA_VERSION}-${MICROMAMBA_BUILD}.tar.bz2"
          MICROMAMBA_FILE="${PWD}/bin/micromamba"
          EXTRA_CONSTRUCTOR_ARGS="--conda-exe ${MICROMAMBA_FILE}"
          constructor --platform ${{ matrix.platform }} ${EXTRA_CONSTRUCTOR_ARGS}
          echo "ARTIFACT=`ls -1 Psi4conda*`" >> $GITHUB_ENV

      - name: Archive Psi4Conda Installer
        uses: actions/upload-artifact@v3
        with:
          if-no-files-found: error
          name: ${{ env.PLATFORM }}-${{ env.PYVER }}
          path: installers/${{ env.ARTIFACT }}
          retention-days: 1

      - name: Install Psi4Conda Installer
        run: |
          micromamba install -y -n base -f installers/${{ env.ARTIFACT }}

      - name: Test Installer
        run: |
          micromamba info
          micromamba list
          which python psi4
          psi4 --version
          psi4 --test -n2

      - name: Install package
        run: |
          micromamba activate test
          micromamba install -c conda-forge psi4 libecpint -y
          python -m pip install . --no-deps
          pip install numpy unittest-mock
          micromamba list

      - name: Verify psi4 installation
        run: |
          micromamba activate test
          python -m pip show psi4

      - name: Set PYTHONPATH
        run: echo "PYTHONPATH=${{ github.workspace }}/MQC_Proj" >> $GITHUB_ENV

      - name: Run tests
        run: |
          micromamba activate test
          pytest -v --cov=MQC_Proj --cov-report=xml --color=yes MQC_Proj/tests/

      - name: Upload coverage
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-${{ matrix.os }}-py${{ matrix.python-version }}